{"ast":null,"code":"var _jsxFileName = \"/home/john/OR-Labs/LP Solver/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LinearProgrammingSolver = () => {\n  _s();\n  const [numVariables, setNumVariables] = useState(0);\n  const [numEquations, setNumEquations] = useState(0);\n  const [objectiveCoefficients, setObjectiveCoefficients] = useState([]);\n  const [constraints, setConstraints] = useState([]);\n  const handleVariableChange = (index, value) => {\n    let updatedCoefficients = [...objectiveCoefficients];\n    updatedCoefficients[index] = value;\n    setObjectiveCoefficients(updatedCoefficients);\n  };\n  const handleEquationChange = (eqIndex, varIndex, value) => {\n    let updatedConstraints = [...constraints];\n    if (!updatedConstraints[eqIndex]) {\n      updatedConstraints[eqIndex] = {\n        coefficients: Array(numVariables).fill(\"\"),\n        operator: \"<=\",\n        rhs: \"\"\n      };\n    }\n    updatedConstraints[eqIndex].coefficients[varIndex] = value;\n    setConstraints(updatedConstraints);\n  };\n  const handleOperatorChange = (eqIndex, value) => {\n    let updatedConstraints = [...constraints];\n    updatedConstraints[eqIndex].operator = value;\n    setConstraints(updatedConstraints);\n  };\n  const handleRHSChange = (eqIndex, value) => {\n    let updatedConstraints = [...constraints];\n    updatedConstraints[eqIndex].rhs = value;\n    setConstraints(updatedConstraints);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"600px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Linear Programming Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of Variables\",\n        onChange: e => setNumVariables(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of Equations\",\n        onChange: e => setNumEquations(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Objective Function\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Z = \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), Array.from({\n          length: numVariables\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `x${index + 1}`,\n          onChange: e => handleVariableChange(index, e.target.value)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Constraints\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), Array.from({\n        length: numEquations\n      }).map((_, eqIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Array.from({\n          length: numVariables\n        }).map((_, varIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `x${varIndex + 1}`,\n          onChange: e => handleEquationChange(eqIndex, varIndex, e.target.value)\n        }, varIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleOperatorChange(eqIndex, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"<=\",\n            children: \"\\u2264\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \">=\",\n            children: \"\\u2265\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"=\",\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"RHS\",\n          onChange: e => handleRHSChange(eqIndex, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, eqIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\",\n        padding: \"10px\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        border: \"none\",\n        cursor: \"pointer\"\n      },\n      children: \"Solve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LinearProgrammingSolver, \"UmIYGHmq3H6yQbLXt+2Yfubxokg=\");\n_c = LinearProgrammingSolver;\nexport default LinearProgrammingSolver;\nvar _c;\n$RefreshReg$(_c, \"LinearProgrammingSolver\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LinearProgrammingSolver","_s","numVariables","setNumVariables","numEquations","setNumEquations","objectiveCoefficients","setObjectiveCoefficients","constraints","setConstraints","handleVariableChange","index","value","updatedCoefficients","handleEquationChange","eqIndex","varIndex","updatedConstraints","coefficients","Array","fill","operator","rhs","handleOperatorChange","handleRHSChange","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","Number","target","from","length","map","_","width","marginTop","backgroundColor","color","border","cursor","_c","$RefreshReg$"],"sources":["/home/john/OR-Labs/LP Solver/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst LinearProgrammingSolver = () => {\n  const [numVariables, setNumVariables] = useState(0);\n  const [numEquations, setNumEquations] = useState(0);\n  const [objectiveCoefficients, setObjectiveCoefficients] = useState([]);\n  const [constraints, setConstraints] = useState([]);\n\n  const handleVariableChange = (index, value) => {\n    let updatedCoefficients = [...objectiveCoefficients];\n    updatedCoefficients[index] = value;\n    setObjectiveCoefficients(updatedCoefficients);\n  };\n\n  const handleEquationChange = (eqIndex, varIndex, value) => {\n    let updatedConstraints = [...constraints];\n    if (!updatedConstraints[eqIndex]) {\n      updatedConstraints[eqIndex] = { coefficients: Array(numVariables).fill(\"\"), operator: \"<=\", rhs: \"\" };\n    }\n    updatedConstraints[eqIndex].coefficients[varIndex] = value;\n    setConstraints(updatedConstraints);\n  };\n\n  const handleOperatorChange = (eqIndex, value) => {\n    let updatedConstraints = [...constraints];\n    updatedConstraints[eqIndex].operator = value;\n    setConstraints(updatedConstraints);\n  };\n\n  const handleRHSChange = (eqIndex, value) => {\n    let updatedConstraints = [...constraints];\n    updatedConstraints[eqIndex].rhs = value;\n    setConstraints(updatedConstraints);\n  };\n\n  return (\n    <div style={{ padding: \"20px\", maxWidth: \"600px\", margin: \"auto\" }}>\n      <h1>Linear Programming Solver</h1>\n      \n      <div>\n        <input\n          type=\"number\"\n          placeholder=\"Number of Variables\"\n          onChange={(e) => setNumVariables(Number(e.target.value))}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Number of Equations\"\n          onChange={(e) => setNumEquations(Number(e.target.value))}\n        />\n      </div>\n      \n      <div>\n        <h2>Objective Function</h2>\n        <div>\n          <span>Z = </span>\n          {Array.from({ length: numVariables }).map((_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              placeholder={`x${index + 1}`}\n              onChange={(e) => handleVariableChange(index, e.target.value)}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <h2>Constraints</h2>\n        {Array.from({ length: numEquations }).map((_, eqIndex) => (\n          <div key={eqIndex}>\n            {Array.from({ length: numVariables }).map((_, varIndex) => (\n              <input\n                key={varIndex}\n                type=\"text\"\n                placeholder={`x${varIndex + 1}`}\n                onChange={(e) => handleEquationChange(eqIndex, varIndex, e.target.value)}\n              />\n            ))}\n            <select onChange={(e) => handleOperatorChange(eqIndex, e.target.value)}>\n              <option value=\"<=\">≤</option>\n              <option value=\">=\">≥</option>\n              <option value=\"=\">=</option>\n            </select>\n            <input\n              type=\"text\"\n              placeholder=\"RHS\"\n              onChange={(e) => handleRHSChange(eqIndex, e.target.value)}\n            />\n          </div>\n        ))}\n      </div>\n      \n      <button style={{ width: \"100%\", marginTop: \"10px\", padding: \"10px\", backgroundColor: \"blue\", color: \"white\", border: \"none\", cursor: \"pointer\" }}>Solve</button>\n    </div>\n  );\n};\n\nexport default LinearProgrammingSolver;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}