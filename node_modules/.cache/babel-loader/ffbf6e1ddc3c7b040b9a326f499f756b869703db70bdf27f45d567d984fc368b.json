{"ast":null,"code":"var _jsxFileName = \"/home/john/OR-Labs/LP Solver/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function App() {\n//   const [numbers, setNumbers] = useState([7, 2, 9, 3, 6]);\n//   const [sortedNumbers, setSortedNumbers] = useState([]);\n\n//   const sendArrayToFlask = async () => {\n//     try {\n//       const response = await axios.post(\"http://localhost:8000/api/sort\", {\n//         numbers: numbers,\n//       });\n//       setSortedNumbers(response.data.sorted_numbers);\n//     } catch (error) {\n//       console.error(\"Error sending data to Flask:\", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>أنا بكلم بايثون يا رجااااالة شوفوا دي</h1>\n//       <h3>Original Array: {JSON.stringify(numbers)}</h3>\n//       <button onClick={sendArrayToFlask}>Sort Array</button>\n//       <h3>Sorted Array: {JSON.stringify(sortedNumbers)}</h3>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect, useState } from \"react\";\nimport { loadPyodide } from \"pyodide\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PythonExecutor() {\n  _s();\n  const [pyodide, setPyodide] = useState(null);\n  const [result, setResult] = useState(\"\");\n  useEffect(() => {\n    const initPyodide = async () => {\n      let py = await loadPyodide();\n      setPyodide(py);\n    };\n    initPyodide();\n  }, []);\n  const runPython = async () => {\n    if (pyodide) {\n      const output = pyodide.runPython(`\n                import math\n                math.sqrt(144)\n            `);\n      setResult(output);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runPython,\n      children: \"Run Python\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(PythonExecutor, \"HUFFwMD7KBqJ2uMlmaGKl+kbArs=\");\n_c = PythonExecutor;\nexport default PythonExecutor;\nvar _c;\n$RefreshReg$(_c, \"PythonExecutor\");","map":{"version":3,"names":["useEffect","useState","loadPyodide","jsxDEV","_jsxDEV","PythonExecutor","_s","pyodide","setPyodide","result","setResult","initPyodide","py","runPython","output","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/john/OR-Labs/LP Solver/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function App() {\n//   const [numbers, setNumbers] = useState([7, 2, 9, 3, 6]);\n//   const [sortedNumbers, setSortedNumbers] = useState([]);\n\n//   const sendArrayToFlask = async () => {\n//     try {\n//       const response = await axios.post(\"http://localhost:8000/api/sort\", {\n//         numbers: numbers,\n//       });\n//       setSortedNumbers(response.data.sorted_numbers);\n//     } catch (error) {\n//       console.error(\"Error sending data to Flask:\", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>أنا بكلم بايثون يا رجااااالة شوفوا دي</h1>\n//       <h3>Original Array: {JSON.stringify(numbers)}</h3>\n//       <button onClick={sendArrayToFlask}>Sort Array</button>\n//       <h3>Sorted Array: {JSON.stringify(sortedNumbers)}</h3>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport { useEffect, useState } from \"react\";\nimport { loadPyodide } from \"pyodide\";\n\nfunction PythonExecutor() {\n    const [pyodide, setPyodide] = useState(null);\n    const [result, setResult] = useState(\"\");\n\n    useEffect(() => {\n        const initPyodide = async () => {\n            let py = await loadPyodide();\n            setPyodide(py);\n        };\n        initPyodide();\n    }, []);\n\n    const runPython = async () => {\n        if (pyodide) {\n            const output = pyodide.runPython(`\n                import math\n                math.sqrt(144)\n            `);\n            setResult(output);\n        }\n    };\n\n    return (\n        <div>\n            <button onClick={runPython}>Run Python</button>\n            <p>Result: {result}</p>\n        </div>\n    );\n}\n\nexport default PythonExecutor;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIC,EAAE,GAAG,MAAMV,WAAW,CAAC,CAAC;MAC5BM,UAAU,CAACI,EAAE,CAAC;IAClB,CAAC;IACDD,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIN,OAAO,EAAE;MACT,MAAMO,MAAM,GAAGP,OAAO,CAACM,SAAS,CAAC;AAC7C;AACA;AACA,aAAa,CAAC;MACFH,SAAS,CAACI,MAAM,CAAC;IACrB;EACJ,CAAC;EAED,oBACIV,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAQY,OAAO,EAAEH,SAAU;MAAAE,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/ChB,OAAA;MAAAW,QAAA,GAAG,UAAQ,EAACN,MAAM;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACd,EAAA,CA5BQD,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AA8BvB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}