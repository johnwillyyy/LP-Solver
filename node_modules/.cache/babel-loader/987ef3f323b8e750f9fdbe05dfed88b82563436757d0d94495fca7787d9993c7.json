{"ast":null,"code":"var _jsxFileName = \"/home/john/OR-Labs/LP Solver/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LinearProgrammingSolver = () => {\n  _s();\n  const [problemType, setProblemType] = useState(\"normal\"); // Normal or Goal Programming\n  const [numVariables, setNumVariables] = useState(0);\n  const [numEquations, setNumEquations] = useState(0);\n  const [numGoals, setNumGoals] = useState(0);\n  const [objectiveCoefficients, setObjectiveCoefficients] = useState([]);\n  const [objectiveType, setObjectiveType] = useState(\"maximize\");\n  const [technique, setTechnique] = useState(\"bigM\");\n  const [constraints, setConstraints] = useState([]);\n  const [goals, setGoals] = useState([]);\n  const [unrestrictedVariables, setUnrestrictedVariables] = useState([]);\n  const [goalPriorityType, setGoalPriorityType] = useState(\"weights\"); // Weights or Priorities\n  const [goalPriorities, setGoalPriorities] = useState([]);\n  const [goalWeights, setGoalWeights] = useState([]);\n  const sendDataToServer = async () => {\n    const requestData = {\n      problemType,\n      objectiveCoefficients,\n      objectiveType,\n      technique,\n      constraints,\n      goals,\n      unrestrictedVariables,\n      goalPriorityType,\n      goalPriorities,\n      goalWeights\n    };\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/process-data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to send data\");\n      }\n      const responseData = await response.json();\n      console.log(\"Server Response:\", responseData);\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n    }\n  };\n  const handleVariableChange = (index, value) => {\n    let updatedCoefficients = [...objectiveCoefficients];\n    updatedCoefficients[index] = value;\n    setObjectiveCoefficients(updatedCoefficients);\n  };\n  const handleUnrestrictedChange = value => {\n    setUnrestrictedVariables(prev => {\n      const updated = prev.includes(value) ? prev.filter(v => v !== value) : [...prev, value];\n      console.log(updated);\n      return updated;\n    });\n  };\n  const initializeConstraintIfNeeded = (eqIndex, targetArray) => {\n    let updatedArray = [...targetArray];\n    if (!updatedArray[eqIndex]) {\n      updatedArray[eqIndex] = {\n        coefficients: Array(numVariables).fill(\"\"),\n        operator: \"<=\",\n        rhs: \"\"\n      };\n    }\n    return updatedArray;\n  };\n  const handleEquationChange = (eqIndex, varIndex, value, targetArray, setter) => {\n    let updatedArray = initializeConstraintIfNeeded(eqIndex, targetArray);\n    updatedArray[eqIndex].coefficients[varIndex] = value;\n    setter(updatedArray);\n    console.log(constraints);\n    console.log(goals);\n    console.log(objectiveType);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      margin: \"auto\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Linear Programming Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Problem Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setProblemType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"normal\",\n          children: \"Normal Min/Max Problem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"goal\",\n          children: \"Goal Programming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), problemType === \"normal\" && /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setTechnique(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bigM\",\n          children: \"Big M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2phase\",\n          children: \"Two-Phase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), (problemType === \"normal\" || problemType === \"goal\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of Variables\",\n        onChange: e => setNumVariables(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of Constraints\",\n        onChange: e => setNumEquations(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), problemType === \"goal\" && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of Goals\",\n        onChange: e => setNumGoals(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), problemType === \"normal\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Objective Function\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setObjectiveType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"maximize\",\n            children: \"Maximize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"minimize\",\n            children: \"Minimize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Z = \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 8\n        }, this), Array.from({\n          length: numVariables\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `x${index + 1}`,\n          onChange: e => handleVariableChange(index, e.target.value)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 10\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Constraints\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), Array.from({\n        length: numEquations\n      }).map((_, eqIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Array.from({\n          length: numVariables\n        }).map((_, varIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `x${varIndex + 1}`,\n          onChange: e => handleEquationChange(eqIndex, varIndex, e.target.value, constraints, setConstraints)\n        }, varIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleEquationChange(eqIndex, \"operator\", e.target.value, constraints, setConstraints),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"<=\",\n            children: \"\\u2264\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \">=\",\n            children: \"\\u2265\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"=\",\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"RHS\",\n          onChange: e => handleEquationChange(eqIndex, \"rhs\", e.target.value, constraints, setConstraints)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, eqIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), problemType === \"goal\" && numGoals > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Goal Equations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), Array.from({\n        length: numGoals\n      }).map((_, goalIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Array.from({\n          length: numVariables\n        }).map((_, varIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `x${varIndex + 1}`,\n          onChange: e => handleEquationChange(goalIndex, varIndex, e.target.value, goals, setGoals)\n        }, varIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleEquationChange(goalIndex, \"operator\", e.target.value, goals, setGoals),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"<=\",\n            children: \"\\u2264\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \">=\",\n            children: \"\\u2265\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"=\",\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"RHS\",\n          onChange: e => handleEquationChange(goalIndex, \"rhs\", e.target.value, goals, setGoals)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, goalIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Goal Prioritization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"weights\",\n          checked: goalPriorityType === \"weights\",\n          onChange: () => setGoalPriorityType(\"weights\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), \"Weights\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"priorities\",\n          checked: goalPriorityType === \"priorities\",\n          onChange: () => setGoalPriorityType(\"priorities\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), \"Priorities\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), goalPriorityType === \"weights\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Assign Weights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this), Array.from({\n          length: numGoals\n        }).map((_, goalIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: `Weight for Goal ${goalIndex + 1}`,\n          onChange: e => {\n            let updatedWeights = [...goalWeights];\n            updatedWeights[goalIndex] = e.target.value;\n            setGoalWeights(updatedWeights);\n            console.log(updatedWeights);\n          }\n        }, goalIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this), goalPriorityType === \"priorities\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Set Priorities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this), Array.from({\n          length: numGoals\n        }).map((_, goalIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Priority for Goal ${goalIndex + 1} (e.g. p${goalIndex + 1})`,\n          onChange: e => {\n            let updatedPriorities = [...goalPriorities];\n            updatedPriorities[goalIndex] = e.target.value;\n            setGoalPriorities(updatedPriorities);\n            console.log(updatedPriorities);\n          }\n        }, goalIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), numVariables > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Unrestricted Variables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), Array.from({\n        length: numVariables\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: `x${index + 1}`,\n          onChange: e => handleUnrestrictedChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this), ` x${index + 1}`]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendDataToServer,\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\",\n        padding: \"10px\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        border: \"none\",\n        cursor: \"pointer\"\n      },\n      children: \"Solve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(LinearProgrammingSolver, \"1t1bJJe+sivYYff3dEW0Z5D7DXM=\");\n_c = LinearProgrammingSolver;\nexport default LinearProgrammingSolver;\nvar _c;\n$RefreshReg$(_c, \"LinearProgrammingSolver\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LinearProgrammingSolver","_s","problemType","setProblemType","numVariables","setNumVariables","numEquations","setNumEquations","numGoals","setNumGoals","objectiveCoefficients","setObjectiveCoefficients","objectiveType","setObjectiveType","technique","setTechnique","constraints","setConstraints","goals","setGoals","unrestrictedVariables","setUnrestrictedVariables","goalPriorityType","setGoalPriorityType","goalPriorities","setGoalPriorities","goalWeights","setGoalWeights","sendDataToServer","requestData","response","fetch","method","headers","body","JSON","stringify","ok","Error","responseData","json","console","log","error","handleVariableChange","index","value","updatedCoefficients","handleUnrestrictedChange","prev","updated","includes","filter","v","initializeConstraintIfNeeded","eqIndex","targetArray","updatedArray","coefficients","Array","fill","operator","rhs","handleEquationChange","varIndex","setter","style","padding","margin","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","type","placeholder","Number","from","length","map","_","goalIndex","checked","updatedWeights","updatedPriorities","marginRight","onClick","width","marginTop","backgroundColor","color","border","cursor","_c","$RefreshReg$"],"sources":["/home/john/OR-Labs/LP Solver/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst LinearProgrammingSolver = () => {\n  const [problemType, setProblemType] = useState(\"normal\"); // Normal or Goal Programming\n  const [numVariables, setNumVariables] = useState(0);\n  const [numEquations, setNumEquations] = useState(0);\n  const [numGoals, setNumGoals] = useState(0);\n  const [objectiveCoefficients, setObjectiveCoefficients] = useState([]);\n  const [objectiveType, setObjectiveType] = useState(\"maximize\");\n  const [technique, setTechnique] = useState(\"bigM\");\n  const [constraints, setConstraints] = useState([]);\n  const [goals, setGoals] = useState([]);\n  const [unrestrictedVariables, setUnrestrictedVariables] = useState([]);\n  const [goalPriorityType, setGoalPriorityType] = useState(\"weights\"); // Weights or Priorities\n  const [goalPriorities, setGoalPriorities] = useState([]);\n  const [goalWeights, setGoalWeights] = useState([]);\n\n\n  const sendDataToServer = async () => {\n    const requestData = {\n      problemType,\n      objectiveCoefficients,\n      objectiveType,\n      technique,\n      constraints,\n      goals,\n      unrestrictedVariables,\n      goalPriorityType,\n      goalPriorities,\n      goalWeights\n    };\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/process-data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to send data\");\n      }\n\n      const responseData = await response.json();\n      console.log(\"Server Response:\", responseData);\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n    }\n  };\n\n  const handleVariableChange = (index, value) => {\n    let updatedCoefficients = [...objectiveCoefficients];\n    updatedCoefficients[index] = value;\n    setObjectiveCoefficients(updatedCoefficients);\n  };\n  const handleUnrestrictedChange = (value) => {\n    setUnrestrictedVariables((prev) => {\n      const updated = prev.includes(value) ? prev.filter((v) => v !== value) : [...prev, value];\n      console.log(updated);\n      return updated;\n    });\n  };\n  \n\n  const initializeConstraintIfNeeded = (eqIndex, targetArray) => {\n    let updatedArray = [...targetArray];\n    if (!updatedArray[eqIndex]) {\n      updatedArray[eqIndex] = { coefficients: Array(numVariables).fill(\"\"), operator: \"<=\", rhs: \"\" };\n    }\n    return updatedArray;\n  };\n\n  const handleEquationChange = (eqIndex, varIndex, value, targetArray, setter) => {\n    let updatedArray = initializeConstraintIfNeeded(eqIndex, targetArray);\n    updatedArray[eqIndex].coefficients[varIndex] = value;\n    setter(updatedArray);\n    console.log(constraints);\n    console.log(goals);\n    console.log( objectiveType);\n  };\n\n\n\n  return (\n    <div style={{ padding: \"20px\", margin: \"auto\", textAlign: \"center\" }}>\n      <h1>Linear Programming Solver</h1>\n      \n      <div>\n        <label>Select Problem Type: </label>\n        <select onChange={(e) => setProblemType(e.target.value)}>\n          <option value=\"normal\">Normal Min/Max Problem</option>\n          <option value=\"goal\">Goal Programming</option>\n        </select>\n\n        {(problemType === \"normal\") && (\n          <select onChange={(e) => setTechnique(e.target.value)}>\n         <option value=\"bigM\">Big M</option>\n         <option value=\"2phase\">Two-Phase</option>\n       </select>\n      )}\n      </div>\n      \n      {(problemType === \"normal\" || problemType === \"goal\") && (\n        <div>\n          <input\n            type=\"number\"\n            placeholder=\"Number of Variables\"\n            onChange={(e) => setNumVariables(Number(e.target.value))}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Number of Constraints\"\n            onChange={(e) => setNumEquations(Number(e.target.value))}\n          />\n          {problemType === \"goal\" && (\n            <input\n              type=\"number\"\n              placeholder=\"Number of Goals\"\n              onChange={(e) => setNumGoals(Number(e.target.value))}\n            />\n          )}\n        </div>\n      )}\n\n{(problemType === \"normal\") && (\n     <div>\n     <h2>Objective Function</h2>\n     <div>\n       <select onChange={(e) => setObjectiveType(e.target.value)}>\n         <option value=\"maximize\">Maximize</option>\n         <option value=\"minimize\">Minimize</option>\n       </select>\n       <span> Z = </span>\n       {Array.from({ length: numVariables }).map((_, index) => (\n         <input\n           key={index}\n           type=\"text\"\n           placeholder={`x${index + 1}`}\n           onChange={(e) => handleVariableChange(index, e.target.value)}\n         />\n       ))}\n\n     </div>\n   </div>\n      )}\n      \n      <div>\n        <h2>Constraints</h2>\n        {Array.from({ length: numEquations }).map((_, eqIndex) => (\n          <div key={eqIndex}>\n            {Array.from({ length: numVariables }).map((_, varIndex) => (\n              <input\n                key={varIndex}\n                type=\"text\"\n                placeholder={`x${varIndex + 1}`}\n                onChange={(e) => handleEquationChange(eqIndex, varIndex, e.target.value, constraints, setConstraints)}\n              />\n            ))}\n            <select onChange={(e) => handleEquationChange(eqIndex, \"operator\", e.target.value, constraints, setConstraints)}>\n              <option value=\"<=\">≤</option>\n              <option value=\">=\">≥</option>\n              <option value=\"=\">=</option>\n            </select>\n            <input\n              type=\"text\"\n              placeholder=\"RHS\"\n              onChange={(e) => handleEquationChange(eqIndex, \"rhs\", e.target.value, constraints, setConstraints)}\n            />\n          </div>\n        ))}\n      </div>\n      \n      {problemType === \"goal\" && numGoals > 0 && (\n        <div>\n          <h2>Goal Equations</h2>\n          {Array.from({ length: numGoals }).map((_, goalIndex) => (\n            <div key={goalIndex}>\n              {Array.from({ length: numVariables }).map((_, varIndex) => (\n                <input\n                  key={varIndex}\n                  type=\"text\"\n                  placeholder={`x${varIndex + 1}`}\n                  onChange={(e) => handleEquationChange(goalIndex, varIndex, e.target.value, goals, setGoals)}\n                />\n              ))}\n              <select onChange={(e) => handleEquationChange(goalIndex, \"operator\", e.target.value, goals, setGoals)}>\n                <option value=\"<=\">≤</option>\n                <option value=\">=\">≥</option>\n                <option value=\"=\">=</option>\n              </select>\n              <input\n                type=\"text\"\n                placeholder=\"RHS\"\n                onChange={(e) => handleEquationChange(goalIndex, \"rhs\", e.target.value, goals, setGoals)}\n              />\n            </div>\n          ))}\n          \n          <h2>Goal Prioritization</h2>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"weights\"\n              checked={goalPriorityType === \"weights\"}\n              onChange={() => setGoalPriorityType(\"weights\")}\n            />\n            Weights\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"priorities\"\n              checked={goalPriorityType === \"priorities\"}\n              onChange={() => setGoalPriorityType(\"priorities\")}\n            />\n            Priorities\n          </label>\n          \n          {goalPriorityType === \"weights\" && (\n            <div>\n              <h3>Assign Weights</h3>\n              {Array.from({ length: numGoals }).map((_, goalIndex) => (\n                <input\n                  key={goalIndex}\n                  type=\"number\"\n                  placeholder={`Weight for Goal ${goalIndex + 1}`}\n                  onChange={(e) => {\n                    let updatedWeights = [...goalWeights];\n                    updatedWeights[goalIndex] = e.target.value;\n                    setGoalWeights(updatedWeights);\n                    console.log(updatedWeights);\n                  }}\n                />\n              ))}\n            </div>\n          )}\n          \n          {goalPriorityType === \"priorities\" && (\n            <div>\n              <h3>Set Priorities</h3>\n              {Array.from({ length: numGoals }).map((_, goalIndex) => (\n                <input\n                  key={goalIndex}\n                  type=\"text\"\n                  placeholder={`Priority for Goal ${goalIndex + 1} (e.g. p${goalIndex + 1})`}\n                  onChange={(e) => {\n                    let updatedPriorities = [...goalPriorities];\n                    updatedPriorities[goalIndex] = e.target.value;\n                    setGoalPriorities(updatedPriorities);\n                    console.log(updatedPriorities);\n\n                  }}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n{numVariables > 0 && (\n        <div>\n          <h2>Select Unrestricted Variables</h2>\n          {Array.from({ length: numVariables }).map((_, index) => (\n            <label key={index} style={{ marginRight: \"10px\" }}>\n              <input\n                type=\"checkbox\"\n                value={`x${index + 1}`}\n                onChange={(e) => handleUnrestrictedChange(e.target.value)}\n              />\n              {` x${index + 1}`}\n            </label>\n          ))}\n        </div>\n      )}\n      \n      <button onClick={sendDataToServer} style={{ width: \"100%\", marginTop: \"10px\", padding: \"10px\", backgroundColor: \"blue\", color: \"white\", border: \"none\", cursor: \"pointer\" }}>Solve</button>\n    </div>\n  );\n};\n\nexport default LinearProgrammingSolver;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}