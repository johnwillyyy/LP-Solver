{"ast":null,"code":"var _jsxFileName = \"/home/john/OR-Labs/LP Solver/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function App() {\n//   const [numbers, setNumbers] = useState([7, 2, 9, 3, 6]);\n//   const [sortedNumbers, setSortedNumbers] = useState([]);\n\n//   const sendArrayToFlask = async () => {\n//     try {\n//       const response = await axios.post(\"http://localhost:8000/api/sort\", {\n//         numbers: numbers,\n//       });\n//       setSortedNumbers(response.data.sorted_numbers);\n//     } catch (error) {\n//       console.error(\"Error sending data to Flask:\", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>أنا بكلم بايثون يا رجااااالة شوفوا دي</h1>\n//       <h3>Original Array: {JSON.stringify(numbers)}</h3>\n//       <button onClick={sendArrayToFlask}>Sort Array</button>\n//       <h3>Sorted Array: {JSON.stringify(sortedNumbers)}</h3>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect, useState } from \"react\";\nimport { loadPyodide } from \"pyodide\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PythonExecutor() {\n  _s();\n  const [pyodide, setPyodide] = useState(null);\n  const [output, setOutput] = useState(\"\");\n  const [inputValue, setInputValue] = useState(5); // Default value\n\n  useEffect(() => {\n    const initPyodide = async () => {\n      let py = await loadPyodide();\n      setPyodide(py);\n    };\n    initPyodide();\n  }, []);\n  const runPythonFile = async () => {\n    if (!pyodide) return;\n    const userInput = 10; // Example parameter\n\n    // Fetch the Python file\n    const response = await fetch(\"/script.py\");\n    let pythonCode = await response.text();\n\n    // Inject the parameter dynamically\n    pythonCode = pythonCode.replace(\"PARAM_VALUE\", userInput);\n\n    // Execute the modified Python script\n    const result = pyodide.runPython(pythonCode);\n    setOutput(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runPythonFile,\n      children: \"Compute Factorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Output: \", output]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(PythonExecutor, \"fm833nhEkz2tsmCqZ2HVoyoXtdk=\");\n_c = PythonExecutor;\nexport default PythonExecutor;\nvar _c;\n$RefreshReg$(_c, \"PythonExecutor\");","map":{"version":3,"names":["useEffect","useState","loadPyodide","jsxDEV","_jsxDEV","PythonExecutor","_s","pyodide","setPyodide","output","setOutput","inputValue","setInputValue","initPyodide","py","runPythonFile","userInput","response","fetch","pythonCode","text","replace","result","runPython","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/john/OR-Labs/LP Solver/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function App() {\n//   const [numbers, setNumbers] = useState([7, 2, 9, 3, 6]);\n//   const [sortedNumbers, setSortedNumbers] = useState([]);\n\n//   const sendArrayToFlask = async () => {\n//     try {\n//       const response = await axios.post(\"http://localhost:8000/api/sort\", {\n//         numbers: numbers,\n//       });\n//       setSortedNumbers(response.data.sorted_numbers);\n//     } catch (error) {\n//       console.error(\"Error sending data to Flask:\", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>أنا بكلم بايثون يا رجااااالة شوفوا دي</h1>\n//       <h3>Original Array: {JSON.stringify(numbers)}</h3>\n//       <button onClick={sendArrayToFlask}>Sort Array</button>\n//       <h3>Sorted Array: {JSON.stringify(sortedNumbers)}</h3>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect, useState } from \"react\";\nimport { loadPyodide } from \"pyodide\";\n\nfunction PythonExecutor() {\n    const [pyodide, setPyodide] = useState(null);\n    const [output, setOutput] = useState(\"\");\n    const [inputValue, setInputValue] = useState(5); // Default value\n\n    useEffect(() => {\n        const initPyodide = async () => {\n            let py = await loadPyodide();\n            setPyodide(py);\n        };\n        initPyodide();\n    }, []);\n\n    const runPythonFile = async () => {\n      if (!pyodide) return;\n  \n      const userInput = 10; // Example parameter\n  \n      // Fetch the Python file\n      const response = await fetch(\"/script.py\");\n      let pythonCode = await response.text();\n  \n      // Inject the parameter dynamically\n      pythonCode = pythonCode.replace(\"PARAM_VALUE\", userInput);\n  \n      // Execute the modified Python script\n      const result = pyodide.runPython(pythonCode);\n      setOutput(result);\n  };\n\n    return (\n        <div>\n            <input\n                type=\"number\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n            />\n            <button onClick={runPythonFile}>Compute Factorial</button>\n            <p>Output: {output}</p>\n        </div>\n    );\n}\n\nexport default PythonExecutor;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjDD,SAAS,CAAC,MAAM;IACZ,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIC,EAAE,GAAG,MAAMZ,WAAW,CAAC,CAAC;MAC5BM,UAAU,CAACM,EAAE,CAAC;IAClB,CAAC;IACDD,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACR,OAAO,EAAE;IAEd,MAAMS,SAAS,GAAG,EAAE,CAAC,CAAC;;IAEtB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;IAC1C,IAAIC,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;IAEtC;IACAD,UAAU,GAAGA,UAAU,CAACE,OAAO,CAAC,aAAa,EAAEL,SAAS,CAAC;;IAEzD;IACA,MAAMM,MAAM,GAAGf,OAAO,CAACgB,SAAS,CAACJ,UAAU,CAAC;IAC5CT,SAAS,CAACY,MAAM,CAAC;EACrB,CAAC;EAEC,oBACIlB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MACIqB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEf,UAAW;MAClBgB,QAAQ,EAAGC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF7B,OAAA;MAAQ8B,OAAO,EAAEnB,aAAc;MAAAS,QAAA,EAAC;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1D7B,OAAA;MAAAoB,QAAA,GAAG,UAAQ,EAACf,MAAM;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAAC3B,EAAA,CAzCQD,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA2CvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}